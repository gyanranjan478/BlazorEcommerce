@inject HttpClient Http;
<h3>ProductList</h3>

<ul class="list-unstyled">
    @foreach (var product in products)
   {
       <li class="media my-3">
           <div class="media-img-wrapper mr-2">
               <a href="#">
                   <img class="media-img" src="@product.ImageUrl" alt="@product.Title"/>
               </a>
           </div>
           <div class="media-body">
               <a href="#">
                   <h4 class="mb-6">@product.Title</h4>
               </a>
               <p>@product.Description</p>
               <h5 class=price>@product.Price</h5>
           </div>
       </li>
   }
</ul>

@code {
    private static List<Product> products = new List<Product>();

    /// <summary>
    /// First life cycle methods in Blazor WASM
    /// Fires on initialization of component
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>("api/product");

    }


    /// <summary>
    /// Second life cycle methods in Blazor WASM
    /// Sets parameters from route
    /// </summary>
    /// <returns></returns>
    protected override Task OnParametersSetAsync()
    {
        return base.OnParametersSetAsync();
    }

    /// <summary>
    /// Second life cycle methods in Blazor WASM
    /// Fires after rendering completes
    /// </summary>
    /// <returns></returns>
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }
}
