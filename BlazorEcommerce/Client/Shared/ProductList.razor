@inject IProductService _productService;
<h3>ProductList</h3>
@if(_productService.Products == null || _productService.Products.Count == 0)
{
    <span>Loading Products...</span>
}
<ul class="list-unstyled">
    @foreach (var product in _productService.Products)
    {
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                <a href="/product/@product.Id">
                    <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
                </a>
            </div>
            <div class="media-body">
                <a href="/product/@product.Id">
                    <h4 class="mb-6">@product.Title</h4>
                </a>
                <p>@product.Description</p>
                <h5 class=price>@product.Price</h5>
            </div>
        </li>
    }
</ul>

@code {

    /// <summary>
    /// First life cycle methods in Blazor WASM
    /// Fires on initialization of component
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        await _productService.GetProducts();
    }


    /// <summary>
    /// Second life cycle methods in Blazor WASM
    /// Sets parameters from route
    /// </summary>
    /// <returns></returns>
    protected override Task OnParametersSetAsync()
    {
        return base.OnParametersSetAsync();
    }

    /// <summary>
    /// Second life cycle methods in Blazor WASM
    /// Fires after rendering completes
    /// </summary>
    /// <returns></returns>
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }
}
